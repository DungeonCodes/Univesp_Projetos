# Generated by Django 5.1.7 on 2025-04-15 00:04

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Professional',
            fields=[
                ('id_professional', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, verbose_name='ID Profissional')),
                ('credential_id', models.BigIntegerField(unique=True, verbose_name='Matricula')),
                ('name_professional', models.CharField(max_length=255, verbose_name='Nome')),
                ('last_name_professional', models.CharField(max_length=50, verbose_name='Sobrenome')),
                ('job_title', models.CharField(max_length=50, verbose_name='Cargo')),
                ('usage', models.CharField(max_length=50, verbose_name='Permiss√µes')),
            ],
        ),
        migrations.CreateModel(
            name='Prontuarios',
            fields=[
                ('id_prontuario', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, verbose_name='ID Prontuario')),
                ('credential_id', models.BigIntegerField(unique=True, verbose_name='CNS')),
                ('name', models.CharField(max_length=255, verbose_name='Nome')),
                ('last_name', models.CharField(max_length=50, verbose_name='Sobrenome')),
                ('micro_area', models.IntegerField(verbose_name='Microarea')),
                ('family', models.IntegerField(verbose_name='Familia')),
            ],
        ),
        migrations.CreateModel(
            name='Team',
            fields=[
                ('id_team', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, verbose_name='ID Equipe')),
                ('team', models.IntegerField(verbose_name='Equipe')),
                ('micro_area', models.IntegerField(unique=True, verbose_name='Microarea')),
            ],
        ),
        migrations.CreateModel(
            name='SisUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('user_level', models.CharField(choices=[('admin_app', 'Administrador do Sistema'), ('admin_staff', 'Administrador Gerencial'), ('admin_same', 'Administrador do Same'), ('user', 'Usuario Comum')], default='user', max_length=50, null=True, verbose_name='Nivel de Acesso')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
                ('id_user', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='Matricula', to='prontuarios.professional', to_field='credential_id', verbose_name='ID Usuario')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Transfer',
            fields=[
                ('id_transfer', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, verbose_name='ID Transferencia')),
                ('checkout', models.DateTimeField(editable=False, verbose_name='Data de check-out')),
                ('checkin', models.DateTimeField(editable=False, verbose_name='Data de check-in')),
                ('cns', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='prontuarios.prontuarios', verbose_name='CNS')),
                ('id_receiver', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='receiver', to='prontuarios.professional', to_field='credential_id', verbose_name='ID Receptor')),
                ('id_sender', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sender', to='prontuarios.professional', to_field='credential_id', verbose_name='ID Administrativo')),
            ],
        ),
    ]
